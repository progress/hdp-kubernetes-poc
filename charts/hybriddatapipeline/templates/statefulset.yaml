apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-{{ .Values.hdp.services.hdpService.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.hdp.replicaCount }}
  updateStrategy:
    type: {{ .Values.hdp.updateStrategy.type }}  
  selector:
    matchLabels:
      app: hdp-server-app
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: hdp-server-app
        date: "{{ now | unixEpoch }}"
    spec:
      initContainers:
      - name: init-properties
        image: "{{.Values.hdp.image.repository}}:{{.Values.hdp.image.tag}}"
        imagePullPolicy: {{.Values.hdp.image.pullPolicy}}
        {{- if .Values.haproxy.tls.enabled }}
        command: ["/bin/sh", "-c", "mkdir -p /hdpshare && cp /hdpdeployprops/{{.Values.hdp.configurationFileName}} /hdpshare/hdpdeploy.properties && echo \'Config Map mounted and properties file copied to /hdpshare!\'; cat /certs/tls.crt /certs/tls.key > /hdpshare/{{.Values.haproxy.tls.certFileName}} && echo \'Certificate copied to /hdpshare!\'"]
        {{- else }}
        command: ["/bin/sh", "-c", "mkdir -p /hdpshare && cp /hdpdeployprops/{{.Values.hdp.configurationFileName}} /hdpshare/hdpdeploy.properties && echo \'Config Map mounted and properties file copied to /hdpshare!\'"]
        {{- end }}
        volumeMounts:
        - name: properties
          mountPath: /hdpdeployprops
        {{- if .Values.haproxy.tls.enabled }}
        - name: certs
          mountPath: /certs
        {{- end }}  
        - name: shared-storage-volume
          mountPath: /hdpshare
      containers:
        - name: hdp-server
          image: "{{.Values.hdp.image.repository}}:{{.Values.hdp.image.tag}}"
          imagePullPolicy: {{.Values.hdp.image.pullPolicy}}
          ports:
            - name: hdpserver
              containerPort: {{.Values.hdp.ports.hdpServer.port}}
            - name: opaccessor
              containerPort: {{.Values.hdp.ports.opAccessor.port}}
            - name: notification
              containerPort: {{.Values.hdp.ports.notificationServer.port}}
            - name: internal
              containerPort: 8190
          env:
            - name: ACCEPT_EULA
              value: "true"
          volumeMounts:
          - name: properties
            mountPath: /hdpdeployprops
          - name: shared-storage-volume
            mountPath: {{ .Values.hdp.persistence.mountPath }}
          {{- if .Values.hdp.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: {{.Values.hdp.ports.hdpServer.port}}
            initialDelaySeconds: {{ .Values.hdp.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.hdp.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.hdp.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.hdp.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.hdp.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.hdp.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: {{.Values.hdp.ports.hdpServer.port}}
            initialDelaySeconds: {{ .Values.hdp.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.hdp.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.hdp.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.hdp.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.hdp.readinessProbe.successThreshold }}
          {{- end }}
          resources:
            requests:
              memory: {{.Values.hdp.resources.requests.memory}}
              cpu: {{.Values.hdp.resources.requests.cpu}}
            limits:
              memory: {{.Values.hdp.resources.limits.memory}}
              cpu: {{.Values.hdp.resources.limits.cpu}}            
      volumes:
        - name: shared-storage-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-shared-storage-volume
        - name: properties
          configMap:
            name: {{ .Release.Name }}-configmap
        {{- if .Values.haproxy.tls.enabled }}
        - name: certs
          secret:
            secretName: {{ .Values.haproxy.tls.secretName }}
        {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
